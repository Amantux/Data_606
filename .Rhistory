get_ci(level = 0.95)
}
samp_mean
test <- sample_n(us_adults, 10)
for(i in 1:2){
test <- sample_n(us_adults, 10)
test %>%
specify(response = climate_change_affects, success = "Yes") %>%
generate(reps = 1000, type = "bootstrap") %>%
calculate(stat = "prop") %>%
get_ci(level = 0.95)
}
test
samp1 %>%
specify(response = climate_change_affects, success = "Yes") %>%
generate(reps = 1000, type = "bootstrap") %>%
calculate(stat = "prop") %>%
get_ci(level = 0.95)
ci <- samp1 %>%
specify(response = climate_change_affects, success = "Yes") %>%
generate(reps = 1000, type = "bootstrap") %>%
calculate(stat = "prop") %>%
get_ci(level = 0.95)
ci <- samp1 %>%
specify(response = climate_change_affects, success = "Yes") %>%
generate(reps = 1000, type = "bootstrap") %>%
calculate(stat = "prop") %>%
get_ci(level = 0.95)
ci
test <- sample_n(us_adults, 10)
high <- rep(NA, 50)
low <- rep(NA, 50)
for(i in 1:2){
test <- sample_n(us_adults, 10)
ci <- test %>%
specify(response = climate_change_affects, success = "Yes") %>%
generate(reps = 1000, type = "bootstrap") %>%
calculate(stat = "prop") %>%
get_ci(level = 0.95)
high[i] <- ci$upper_ci
low[i] <- ci$lower_ci
}
high
low
test <- sample_n(us_adults, 10)
n <- 60
high <- rep(NA, n)
low <- rep(NA, n)
for(i in 1:n){
test <- sample_n(us_adults, 60)
ci <- test %>%
specify(response = climate_change_affects, success = "Yes") %>%
generate(reps = 1000, type = "bootstrap") %>%
calculate(stat = "prop") %>%
get_ci(level = 0.95)
high[i] <- ci$upper_ci
low[i] <- ci$lower_ci
}
us_adults <- tibble(
climate_change_affects = c(rep("Yes", 62000), rep("No", 38000))
)
full <-
samp1 <- us_adults %>%
sample_n(60)
ggplot(samp1, aes(x = climate_change_affects)) +
geom_bar() +
labs(
x = "", y = "",
title = "Do you think climate change is affecting your local community?"
) +
coord_flip()
us_adults %>%
count(climate_change_affects) %>%
mutate(p = n /sum(n))
us_adults <- tibble(
climate_change_affects = c(rep("Yes", 62000), rep("No", 38000))
)
full <-
samp1 <- us_adults %>%
sample_n(60)
ggplot(samp1, aes(x = climate_change_affects)) +
geom_bar() +
labs(
x = "", y = "",
title = "Do you think climate change is affecting your local community?"
) +
coord_flip()
us_adults %>%
count(climate_change_affects) %>%
mutate(p = n /sum(n)) %>% coord_flip()
us_adults <- tibble(
climate_change_affects = c(rep("Yes", 62000), rep("No", 38000))
)
full <-
samp1 <- us_adults %>%
sample_n(60)
ggplot(samp1, aes(x = climate_change_affects)) +
geom_bar() +
labs(
x = "", y = "",
title = "Do you think climate change is affecting your local community?"
) +
coord_flip()
us_adults %>%
count(climate_change_affects) %>%
mutate(p = n /sum(n)) %>% t()
test <- sample_n(us_adults, 10)
n <- 60
high <- rep(NA, n)
low <- rep(NA, n)
for(i in 1:n){
test <- sample_n(us_adults, 60)
ci <- test %>%
specify(response = climate_change_affects, success = "Yes") %>%
generate(reps = 1000, type = "bootstrap") %>%
calculate(stat = "prop") %>%
get_ci(level = 0.95)
high[i] <- ci$upper_ci
low[i] <- ci$lower_ci
}
plot_ci(lower_vector, upper_vector, "0.62")
plot_ci(low, high, "0.62")
plot_ci(low, high, 0.62)
install.packages("metan")
library(tidyverse)
library(openintro)
library(dplyr)
library(infer)
library(metan)
plot_ci(low, high, 0.62)
library(tidyverse)
library(openintro)
library(dplyr)
library(infer)
library(metan)
plot_ci <- function(lo, hi, m) {
par(mar=c(2, 1, 1, 1), mgp=c(2.7, 0.7, 0))
k <- length(lo)
ci.max <- max(rowSums(matrix(c(-1*lo,hi),ncol=2)))
xR <- m + ci.max*c(-1, 1)
yR <- c(0, 41*k/40)
plot(xR, yR, type='n', xlab='', ylab='', axes=FALSE)
abline(v=m, lty=2, col='#00000088')
axis(1, at=m, paste("mu = ",round(m,4)), cex.axis=1.15)
#axis(2)
for(i in 1:k){
x <- mean(c(hi[i],lo[i]))
ci <- c(lo[i],hi[i])
if((m < hi[i] & m > lo[i])==FALSE){
col <- "#F05133"
points(x, i, cex=1.4, col=col)
#		  points(x, i, pch=20, cex=1.2, col=col)
lines(ci, rep(i, 2), col=col, lwd=5)
} else{
col <- 1
points(x, i, pch=20, cex=1.2, col=col)
lines(ci, rep(i, 2), col=col)
}
}
}
test <- sample_n(us_adults, 10)
n <- 60
high <- rep(NA, n)
low <- rep(NA, n)
for(i in 1:n){
test <- sample_n(us_adults, 60)
ci <- test %>%
specify(response = climate_change_affects, success = "Yes") %>%
generate(reps = 1000, type = "bootstrap") %>%
calculate(stat = "prop") %>%
get_ci(level = 0.95)
high[i] <- ci$upper_ci
low[i] <- ci$lower_ci
}
plot_ci(low, high, 0.62)
test <- sample_n(us_adults, 10)
n <- 50
high <- rep(NA, n)
low <- rep(NA, n)
for(i in 1:n){
test <- sample_n(us_adults, 60)
ci <- test %>%
specify(response = climate_change_affects, success = "Yes") %>%
generate(reps = 1000, type = "bootstrap") %>%
calculate(stat = "prop") %>%
get_ci(level = 0.95)
high[i] <- ci$upper_ci
low[i] <- ci$lower_ci
}
test <- sample_n(us_adults, 10)
n <- 50
high <- rep(NA, n)
low <- rep(NA, n)
for(i in 1:n){
test <- sample_n(us_adults, 60)
ci <- test %>%
specify(response = climate_change_affects, success = "Yes") %>%
generate(reps = 1000, type = "bootstrap") %>%
calculate(stat = "prop") %>%
get_ci(level = 0.95)
high[i] <- ci$upper_ci
low[i] <- ci$lower_ci
}
plot_ci(low, high, 0.62)
n <- 50
high <- rep(NA, n)
low <- rep(NA, n)
for(i in 1:n){
test <- sample_n(us_adults, 60)
ci <- test %>%
specify(response = climate_change_affects, success = "Yes") %>%
generate(reps = 1000, type = "bootstrap") %>%
calculate(stat = "prop") %>%
get_ci(level = 0.01)
high[i] <- ci$upper_ci
low[i] <- ci$lower_ci
}
plot_ci(low, high, 0.62)
n <- 50
high <- rep(NA, n)
low <- rep(NA, n)
for(i in 1:n){
test <- sample_n(us_adults, 60)
ci <- test %>%
specify(response = climate_change_affects, success = "Yes") %>%
generate(reps = 1000, type = "bootstrap") %>%
calculate(stat = "prop") %>%
get_ci(level = 0.95)
high[i] <- ci$upper_ci
low[i] <- ci$lower_ci
}
plot_ci(low, high, 0.62)
set.seed(0144)
us_adults <- tibble(
climate_change_affects = c(rep("Yes", 62000), rep("No", 38000))
)
full <-
samp1 <- us_adults %>%
sample_n(60)
ggplot(samp1, aes(x = climate_change_affects)) +
geom_bar() +
labs(
x = "", y = "",
title = "Do you think climate change is affecting your local community?"
) +
coord_flip()
us_adults %>%
count(climate_change_affects) %>%
mutate(p = n /sum(n)) %>% t()
n <- 50
high <- rep(NA, n)
low <- rep(NA, n)
for(i in 1:n){
test <- sample_n(us_adults, 60)
ci <- test %>%
specify(response = climate_change_affects, success = "Yes") %>%
generate(reps = 1000, type = "bootstrap") %>%
calculate(stat = "prop") %>%
get_ci(level = 0.95)
high[i] <- ci$upper_ci
low[i] <- ci$lower_ci
}
plot_ci(low, high, 0.62)
n <- 50
high <- rep(NA, n)
low <- rep(NA, n)
for(i in 1:n){
test <- sample_n(us_adults, 60)
ci <- test %>%
specify(response = climate_change_affects, success = "Yes") %>%
generate(reps = 1000, type = "bootstrap") %>%
calculate(stat = "prop") %>%
get_ci(level = 0.01)
high[i] <- ci$upper_ci
low[i] <- ci$lower_ci
}
plot_ci(low, high, 0.62)
n <- 50
high <- rep(NA, n)
low <- rep(NA, n)
for(i in 1:n){
test <- sample_n(us_adults, 60)
ci <- test %>%
specify(response = climate_change_affects, success = "Yes") %>%
generate(reps = 1000, type = "bootstrap") %>%
calculate(stat = "prop") %>%
get_ci(level = 0.25)
high[i] <- ci$upper_ci
low[i] <- ci$lower_ci
}
plot_ci(low, high, 0.62)
n <- 50
high <- rep(NA, n)
low <- rep(NA, n)
for(i in 1:n){
test <- sample_n(us_adults, 10 )
ci <- test %>%
specify(response = climate_change_affects, success = "Yes") %>%
generate(reps = 1000, type = "bootstrap") %>%
calculate(stat = "prop") %>%
get_ci(level = 0.01)
high[i] <- ci$upper_ci
low[i] <- ci$lower_ci
}
n <- 50
high <- rep(NA, n)
low <- rep(NA, n)
for(i in 1:n){
test <- sample_n(us_adults, 10)
ci <- test %>%
specify(response = climate_change_affects, success = "Yes") %>%
generate(reps = 1000, type = "bootstrap") %>%
calculate(stat = "prop") %>%
get_ci(level = 0.01)
high[i] <- ci$upper_ci
low[i] <- ci$lower_ci
}
plot_ci(low, high, 0.62)
n <- 50
high <- rep(NA, n)
low <- rep(NA, n)
for(i in 1:n){
test <- sample_n(us_adults, 60)
ci <- test %>%
specify(response = climate_change_affects, success = "Yes") %>%
generate(reps = 2000, type = "bootstrap") %>%
calculate(stat = "prop") %>%
get_ci(level = 0.01)
high[i] <- ci$upper_ci
low[i] <- ci$lower_ci
}
plot_ci(low, high, 0.62)
n <- 50
high <- rep(NA, n)
low <- rep(NA, n)
for(i in 1:n){
test <- sample_n(us_adults, 60)
ci <- test %>%
specify(response = climate_change_affects, success = "Yes") %>%
generate(reps = 1000, type = "bootstrap") %>%
calculate(stat = "prop") %>%
get_ci(level = 0.01)
high[i] <- ci$upper_ci
low[i] <- ci$lower_ci
}
plot_ci(low, high, 0.62)
n <- 50
high <- rep(NA, n)
low <- rep(NA, n)
for(i in 1:n){
test <- sample_n(us_adults, 60)
ci <- test %>%
specify(response = climate_change_affects, success = "Yes") %>%
generate(reps = 1000, type = "bootstrap") %>%
calculate(stat = "prop") %>%
get_ci(level = 0.01)
high[i] <- ci$upper_ci
low[i] <- ci$lower_ci
}
plot_ci(low, high, 0.62)
count_each <-yrbss%>%
count(text_while_driving_30d)
count_each
data('yrbss', package='openintro')
no_helmet <- yrbss %>%
filter(helmet_12m == "never")
no_helmet <- no_helmet %>%
mutate(text_ind = ifelse(text_while_driving_30d == "30", "yes", "no"))
data('yrbss', package='openintro')
no_helmet <- yrbss %>%
filter(helmet_12m == "never")
no_helmet <- no_helmet %>%
mutate(text_ind = ifelse(text_while_driving_30d == "30", "yes", "no"))
no_helmet
data('yrbss', package='openintro')
no_helmet <- yrbss %>%
filter(helmet_12m == "never")
no_helmet <- no_helmet %>%
mutate(text_ind = ifelse(text_while_driving_30d == "30", "yes", "no"))
no_helmet %>% count(text_ind)
no_helmet %>%
specify(response = text_ind, success = "yes") %>%
generate(reps = 1000, type = "bootstrap") %>%
calculate(stat = "prop") %>%
get_ci(level = 0.95)
no_helmet
no_helmet %>%
specify(response = text_ind, success = "yes") %>%
generate(reps = 1000, type = "bootstrap") %>%
calculate(stat = "prop") %>%
get_ci(level = 0.95)
no_helmet
no_helmet %>%
specify(response = text_ind, success = "yes") %>%
generate(reps = 1000, type = "bootstrap") %>%
calculate(stat = "prop") %>%
get_ci(level = 0.95)
no_helmet
no_helmet %>%
filter(text_ind != "") %>%
specify(response = text_ind, success = "yes") %>%
generate(reps = 1000, type = "bootstrap") %>%
calculate(stat = "prop") %>%
get_ci(level = 0.95)
n <- 1000
p <- seq(from = 0, to = 1, by = 0.01)
me <- 2 * sqrt(p * (1 - p)/n)
me
n = 6977
z = 1.96
p <- seq(from = 0, to = 1, by = 0.01)
me <- 2 * sqrt(p * (1 - p)/n)
n = 6977
z = 1.96
p <- seq(from = 0, to = 1, by = 0.01)
me <- 2 * sqrt(p * (1 - p)/n)
me
n = 6977
z = 1.96
p <- sum(seq(from = 0, to = 1, by = 0.01))
me <- 2 * sqrt(p * (1 - p)/n)
me
n <- 6977
p <- seq(from = 0, to = 1, by = 0.01)
me <- 2 * sqrt(p * (1 - p)/n)
n <- 6977
p <- seq(from = 0, to = 1, by = 0.01)
me <- 2 * sqrt(p * (1 - p)/n)
me
p <- seq(from = 0, to = 1, by = 0.01)
p <- seq(from = 0, to = 1, by = 0.01)
p
n <- 6977
p <- seq(from = 0, to = 1, by = 0.01)
me <- 2 * sqrt(p * (1 - p)/n)
n <- 6977
p <- seq(from = 0, to = 1, by = 0.01)
me <- 2 * sqrt(p * (1 - p)/n)
me
n <- 6503
z <- 1.96
p <- seq(from = 0, to = 1, by = 0.01)
se <- z*sqrt((p*(1-p))/n)
me<- z * se
me
n <- 6503
z <- 1.96
p <- seq(from = 0, to = 1, by = 0.01)
se <- z*sqrt((p*(1-p))/n)
me<- z * se
sum(me)
n <- 6977
p <- seq(from = 0, to = 1, by = 0.01)
me <- 2 * sqrt(p * (1 - p)/n)
sum(me)
n <- 6977
p <- seq(from = 0, to = 1, by = 0.01)
me <- 2 * sqrt(p * (1 - p)/n)
1-sum(me)
n <- 6503
p <- seq(from = 0, to = 1, by = 0.01)
me <- 2 * sqrt(p * (1 - p)/n)
n <- 6503
p <- seq(from = 0, to = 1, by = 0.01)
me <- 2 * sqrt(p * (1 - p)/n)
me
n <- 6503
p <- seq(from = 0, to = 1, by = 0.01)
me <- 2 * sqrt(p * (1 - p)/n)
sum(me)-1
n <- 6503
p <- seq(from = 0, to = 1, by = 0.001)
me <- 2 * sqrt(p * (1 - p)/n)
sum(me)-1
n <- 6503
p <- seq(from = 0, to = 1, by = 0.01)
me <- 2 * sqrt(p * (1 - p)/n)
sum(me)-1
n <- 6503
p <- seq(from = 0, to = 1, by = 0.01)
me <- 2 * sqrt(p * (1 - p)/n)
sum(me)-1
dd <- data.frame(p = p, me = me)
ggplot(data = dd, aes(x = p, y = me)) +
geom_line() +
labs(x = "Population Proportion", y = "Margin of Error")
n <- 6503
p <- sum(seq(from = 0, to = 1, by = 0.01))
me <- 2 * sqrt(p * (1 - p)/n)
me
n <- 6503
p <- seq(from = 0, to = 1, by = 0.01)
me <- 2 * sqrt(p * (1 - p)/n)
sum(me)-1
n = 6977
z = 1.96
p <- seq(from = 0, to = 1, by = 0.01)
me <- 2 * sqrt(p * (1 - p)/n)
me
data('yrbss', package='openintro')
no_helmet <- yrbss %>%
filter(helmet_12m == "never")
no_helmet <- no_helmet %>%
mutate(text_ind = ifelse(text_while_driving_30d == "30", "yes", "no"))
no_helmet %>% count(text_ind)
sum(no_helmet$n)
data('yrbss', package='openintro')
no_helmet <- yrbss %>%
filter(helmet_12m == "never")
no_helmet <- no_helmet %>%
mutate(text_ind = ifelse(text_while_driving_30d == "30", "yes", "no"))
no_helmet %>% count(text_ind)
